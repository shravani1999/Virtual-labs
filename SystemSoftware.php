<?php
if(session_status()==PHP_SESSION_NONE)
{
  session_start();
  if(!isset($_SESSION['username']))
  {
    header("Location: index.php");
    exit;
  }
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <script src="js/jquery-3.4.1.min.js"></script>
  <link rel="stylesheet" href="css/Semantic/semantic.min.css">
  <script src="js/semantic.min.js"></script>
  <script src="js/script.js"></script>
  <link rel="stylesheet" href="css/home.css">
  <link rel="icon" href="images\dscelogo.png">
  <title>System Software</title>
</head>
<body>
  <h1 class="ui header" style="text-align:center" id = "head">
      <a class="ui circular image" href="http://dsce.edu.in"><img src="images/dscelogo.jpg"></a>
      <a href="titles.php">Virtual Labs</a>
</h1>
<div id="toTop"><i class="chevron up icon"></i></div>
  <div>
  <div class="ui  light grey inverted secondary huge menu">
  <a class="header item" href="index.php">
    Home
  </a>
 <a class="item">
    About Us
  </a> 
  <?php
    if(!isset($_SESSION["username"])) echo "<a class=\"item\" href=\"login.php\">Login</a><a class=\"item\" href=\"register.php\">Register</a>";
    else 
    { 
      echo "<a class=\"item\">"; 
      echo $_SESSION['username'];
      echo "</a><a class=\"item\" href=\"logoutprocess.php\">Logout</a>";
    }
    ?>
</div>
</div>
  <div class="ui container" id="cont">
    <h2 class="ui header" style="font-size:35px; margin-left:10px;">
    System Software
    </h2>
    <div class="ui stackable grid">
  <div class="four wide column">
    <div class="ui secondary vertical pointing menu" id="Menus">
      <a class="active item" id="intro">
        Introduction
      </a>
      <a class="item" id="prereq">
        Objective
      </a>
      <a class="item" id="list">
        List of Tutorials
      </a>
      <a class="item" id="faq">
        FAQ's
      </a>
    </div>
  </div>
 <div class="twelve wide stretched column">
    <div class="ui segment">
      
      <div id="int" align="justify">
     
    
1. Define System Software and understand hypothetical system architectures
<br> <br>
2. Familiarize with source file, object file and executable file structures and libraries
<br> <br>
3. Understand the significance of syntactic and semantic analysis in a compiler
<br> <br>
4. To analyze and generate tokens using LEX tool. 
<br> <br>
5. To design and develop shell scripts for various small applications.
      </div>
      
      <div id="lis" style="display: none;">
        <div class="ui bulleted list">
          <a class="item" href="Systemsoft_into.php">Introduction to Machine Architecture and Assemblers</a>
          <a class="item" href="System_Assembler.php">Assemblers</a>
          <a class="item" href="Syss_linker.php">Loaders and Linkers</a>
          <a class="item" href="Sys_macro.php">Macro Processor</a>
          <a class="item" href="Ssy_lex.php">LEX & YACC</a>
        </div>
      </div>
      
      
      <div id="pre" style="display: none;">To make students understand the concepts of System Software.<br></div>
      
      <div id="faqs" style="display: none;">
        <div class="ui styled accordion">
          <div class="title">
            <i class="dropdown icon"></i>What is System Software?
          </div>
          <div class="content">
            <p class="transition hidden">System software is a type of computer program that is designed to run a computerâ€™s hardware and application programs. If we think of the computer system as a layered model, the system software is the interface between the hardware and user applications.
            </p>
          </div>
          
          <div class="title" >
            <i class="dropdown icon"></i>What are Assemblers? </div>
          <div class="content">
            <p class="transition hidden">An assembler is a program that takes basic computer instructions and converts them into a pattern of bits that the computer's processor can use to perform its basic operations. Some people call these instructions assembler language and others use the term assembly language.</p>
          </div>

          <div class="title" >
            <i class="dropdown icon"></i>What is a Linker? </div>
          <div class="content">
            <p class="transition hidden">A linker is special program that combines the object files, generated by compiler/assembler, and other pieces of codes to originate an executable file have. exe extension. In the object file, linker searches and append all libraries needed for execution of file. It regulates memory space that code from each module will hold.</p>
          </div>

          <div class="title" >
            <i class="dropdown icon"></i>What is a Loader? </div>
          <div class="content">
            <p class="transition hidden">The loader is special program that takes input of object code from linker, loads it to main memory, and prepares this code for execution by computer. Loader allocates memory space to program. Even it settles down symbolic reference between objects. It in charge of loading programs and libraries in operating system. </p>
          </div>

          <div class="title" >
            <i class="dropdown icon"></i>What is a macro? </div>
          <div class="content">
            <p class="transition hidden">Macro represents a group of commonly used statements in the source programming language.</p>
          </div>

          <div class="title" >
            <i class="dropdown icon"></i>What is lex?
</div>
          <div class="content">
            <p class="transition hidden">Lex is a program that generates lexical analyzer. It is used with YACC parser generator.
The lexical analyzer is a program that transforms an input stream into a sequence of tokens.
It reads the input stream and produces the source code as output through implementing the lexical analyzer in the C program.</p>
          </div>
        </div>
      </div>
      
    </div>
  </div>
</div>
  </div>
  <script language='javascript'>
             $(document).ready(function(){
                $('.ui.accordion').accordion();
             });
</script>
</body>
</html>
